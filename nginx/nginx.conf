server_tokens off;

# Rate limit zones
limit_req_zone $binary_remote_addr zone=site_limit:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=2r/s;

# Block sketchy user-agents
map $http_user_agent $block_bad_ua {
    default 0;
    "" 1;
    "~*curl|wget|python|Go-http-client|java|libwww|masscan|scanner|nmap|fetch|httpclient|sqlmap" 1;
}

# Detect if request is really from Cloudflare
include /etc/nginx/conf.d/cloudflare-ips.conf;

map $is_cloudflare $realip_header {
    1 "CF-Connecting-IP";
    0 "X-Forwarded-For"; # fallback if not from CF
}

real_ip_header $realip_header;

server {
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;
    server_name microservices.khoa.email;

    # SSL settings
    include /etc/letsencrypt/options-ssl-nginx.conf;
    
    ssl_certificate /etc/letsencrypt/live/microservices.khoa.email/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/microservices.khoa.email/privkey.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    resolver 1.1.1.1 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    client_max_body_size 10M;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Block sketchy UAs
    if ($block_bad_ua) {
        return 403;
    }

    # Only allow GET, POST, HEAD, PUT, DELETE globally
    if ($request_method !~ ^(GET|POST|HEAD|PUT|DELETE)$) {
        return 405;
    }

    # Main site
    location / {
        limit_req zone=site_limit burst=10 nodelay;
        limit_except GET HEAD { deny all; }

        root /var/www/html;
        index welcome.html index.html;
    }

    location = /index.html {
        limit_req zone=site_limit burst=10 nodelay;
        limit_except GET HEAD { deny all; }
        root /var/www/html;
    }

    # Dummy favicon to reduce log noise
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        root /var/www/html;
    }

    # ======================
    # Backend Service Routes
    # ======================

    location /api/iam/ {
        limit_req zone=api_limit burst=5 nodelay;
        rewrite ^/api/iam/?(.*)$ /iam/$1 break;
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/patients/ {
        limit_req zone=api_limit burst=5 nodelay;
        rewrite ^/api/patients/?(.*)$ /patient/patients/$1 break;
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/testorders/ {
        limit_req zone=api_limit burst=5 nodelay;
        rewrite ^/api/testorders/?(.*)$ /testorder/$1 break;
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # =========================
    # Blocking bad/unused paths
    # =========================

    location ~ /\.(?!well-known) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* ^/(actuator|env|metrics|beans|configprops|loggers|heapdump|threaddump|shutdown) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* ^/api/.*/actuator {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* ^/(swagger-ui\.html|swagger-ui/|v3/api-docs|swagger-resources|webjars/springfox-swagger-ui) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* /(b)?apply\.cgi {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* ^/\.well-known/security.txt {
        return 404;
        access_log off;
    }
}
